[flake8]
# Base flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
format = default
show-source = true
statistics = true
doctests = true

# flake8-type-checking
# https://github.com/snok/flake8-type-checking#choosing-how-to-handle-forward-references
enable-extensions = TC, TC1

# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = long
docstring-style = numpy

# flake8-quotes
inline-quotes = "

# Plugins:
max-complexity = 6
max-line-length = {{ cookiecutter.max_line_length }}

# flake8-typing-imports
min_python_version = 3.10.0

# flake8-type-checking
type-checking-exempt-modules = typing,typing_extensions
type-checking-pydantic-enabled = {% if cookiecutter.pydantic_support.startswith("y") %}true{% else %}false{% endif %}
# type-checking-pydantic-enabled-baseclass-passlist = NamedTuple,TypedDict
type-checking-fastapi-enabled = {% if cookiecutter.fastapi_support.startswith("y") %}true{% else %}false{% endif %}
type-checking-fastapi-dependency-support-enabled = {% if cookiecutter.fastapi_support.startswith("y") %}true{% else %}false{% endif %}
type-checking-cattrs-enabled = false

# flake8-pytest-style
pytest-parametrize-names-type = csv

# Disable some pydocstyle checks:
# Exclude some pydoctest checks globally:
ignore = X100,
         # pydocstyle
         # http://www.pydocstyle.org/en/2.1.1/error_codes.html
         D1 Missing docstrings
         D400 First line should end with a period
         D401 First line should be in imperative mood

         # darglint
         # https://github.com/terrencepreilly/darglint#error-codes
         DAR103 The docstring parameter type doesn't match function
         DAR203 The docstring parameter type doesn't match function.

         # flake8-pie
         # already caught by pylint
         PIE786 too broad exception

         # pylint
         # https://pylint.pycqa.org/en/latest/messages/messages_list.html
         PLC0103 (invalid-name)
         PLC0114 (missing-module-docstring)
         PLC0115 (missing-class-docstring)
         PLC0116 (missing-function-docstring)
         PLE0401 (import-error)
         PLE0601 (used-before-assignment)  # not working with `if TYPE_CHECKING:`
         PLE0611 (no-name-in-module)
         PLE1101 (no-member)
         PLR0201 (no-self-use)
         PLR0902 (too-many-instance-attributes)
         PLR0903 (too-few-public-methods)
         PLR0904 (too-many-public-methods)
         PLR0913 (too-many-arguments)
         PLR6301 (no-self-use)
         PLW0401 (wildcard-import)
         PLW0511 (fixme)  # duplicate flake8-fixme functionality
         PLW0603 (global-statement)
         PLW0614 (unused-wildcard-import)
         PLW1514 (unspecified-encoding)

         # flake8-pytest-style
         PT011 pytest.raises(ValueError) is too broad

         # https://github.com/afonasev/flake8-return
         R501 do not explicitly return None in function if it is the only possible return value.

         # flake8-rst-docstrings
         # https://github.com/peterjc/flake8-rst-docstrings#flake8-validation-codes
         RST201 Block quote ends without a blank line
         RST203 Definition list ends without a blank line
         RST301 Unexpected indentation
         RST303 Unknown directive type "*"
         RST304 Unknown interpreted text role "*"

         # flake8-fixme
         T101 fixme found (TODO)

         # pycodestyle
         W504 Line break after binary operator

# Excluding some directories:
exclude =
  .git
  __pycache__
  .venv
  .eggs
  *.egg
  **/migrations/*.py

# Ignoring some errors in some files:
per-file-ignores =
  # S101 enable `assert` keyword and magic numbers for tests
  # PLW0621 (redefined-outer-name)
  # TC002 Move third-party import into a type-checking block
  tests/*.py: S101, PLW0621, TC002

[doc8]
# doc8 configuration: https://pypi.org/project/doc8/
ignore-path = docs/_build
max-line-length = {{ cookiecutter.max_line_length }}
sphinx = True
