name: package

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

env:
  PIP_NO_CACHE_DIR: "off"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  POETRY_NO_INTERACTION: "1"

concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.ref }}{% endraw %}
  cancel-in-progress: true

permissions: read-all

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
        uses: actions/setup-python@v3
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Setup poetry
        run: |
          curl -sSL "https://install.python-poetry.org" | python
          echo "Adding `poetry` to `$PATH`"
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: {% raw %}venv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install dependencies
        run: poetry install

      - name: Run checks
        run: make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          {% raw %}# token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos{% endraw %}

  # Releasing package, when in `master` branch or tag
  release-package:
    runs-on: ubuntu-latest
    needs: [checks]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Setup poetry
        env:
          PYPI_TOKEN: {% raw %}${{ secrets.PYPI_TOKEN }}{% endraw %}
          TEST_PYPI_TOKEN: {% raw %}${{ secrets.TEST_PYPI_TOKEN }}{% endraw %}
        run: |
          curl -sSL "https://install.python-poetry.org" | python
          echo "Adding `poetry` to `$PATH`"
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
          echo "Add test-pypi repo"
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          echo "Login"
          poetry config pypi-token.pypi $PYPI_TOKEN || true
          poetry config pypi-token.test-pypi $TEST_PYPI_TOKEN || true

      - name: Add version to environment vars
        run: |
          PROJECT_VERSION=$(poetry version --short)
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV

      - name: Check if tag version matches project version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG=${GITHUB_REF:10}
          echo $TAG
          echo $PROJECT_VERSION
          if [[ "$TAG" != "$PROJECT_VERSION" ]]; then exit 1; fi

      - name: Build and publish (dry-run)
        if: github.actor != 'dependabot[bot]'
        run: rm -rf dist && poetry publish --build --dry-run

      - name: Build and publish
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          rm -rf dist && poetry publish --build
          # rm -rf dist && poetry publish --build -r test-pypi
