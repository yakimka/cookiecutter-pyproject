[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.project_name }}"
description = "{{ cookiecutter.project_description }}"
version = "0.1.0"
license = "MIT"

#packages = [
#    { include = "{{ cookiecutter.module_name }}" },
#]
#include = ["README.md"]

authors = [
  "{{ cookiecutter.organization }}"
]

readme = "README.md"

repository = "https://github.com/{{ cookiecutter.organization }}/{{ cookiecutter.project_name }}"

keywords = []

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.dev-dependencies]
hypothesis = "^6.82.6"
mypy = "^1.5"
pre-commit = "^3.3.3"
pytest = "^7.1"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-deadfixtures = "^2.2.1"
pytest-randomly = "^3.12"

[tool.isort]
# isort configuration:
# https://github.com/timothycrosley/isort/wiki/isort-Settings
profile = "black"
include_trailing_comma = true
use_parentheses = true
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
line_length = "{{ cookiecutter.max_line_length }}"

[tool.black]
line-length = "{{ cookiecutter.max_line_length }}"

[tool.pytest.ini_options]
# Directories that are not visited by pytest collector:
norecursedirs = [
  "*.egg",
  ".eggs",
  "dist",
  "build",
  "docs",
  ".tox",
  ".git",
  "__pycache__",
  ".cache",
  ".venv",
  "venv",
]

# Strict `@xfail` by default:
xfail_strict = true

asyncio_mode = "auto"

# Extra options:
addopts = [
  # don't add --cov because it breaks pycharm debugger
  #   just add it manaually when needed to cmd args
  "--strict-markers",
  "--strict-config",
  "--tb=short",
  "--cov-report=term-missing",
  "--cov-report=xml",
#  "--cov-fail-under=100",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
  "if TYPE_CHECKING:",
]

[tool.mypy]
files = ["."]
exclude = ["tests/"]

##{% if cookiecutter.pydantic_support.startswith("y") %}
plugins = ["pydantic.mypy"]
##{% endif %}
# mypy configurations: https://mypy.readthedocs.io/en/latest/config_file.html
allow_redefinition = false
check_untyped_defs = true
disallow_any_explicit = false
disallow_any_generics = false
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
